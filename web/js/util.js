var analytics = require('ga-browser')(),
  util = {};

util.getLocation = function(successCallback, errorCallback) {

  var geolocationError = function(err) {
    switch (err.code) {
      case 1:
        errorCallback('This feature requires your location.  Unable to proceed.');
        break;
      case 2:
      case 3:
        errorCallback('Error getting your location.  Try again later.');
        break;
    }
  }
  // get user location
  if ("geolocation" in navigator) {
    // console.log('geolocation is available');
    navigator.geolocation.getCurrentPosition(successCallback,
      geolocationError,
      {
        enableHighAccuracy: true,
        timeout: 20000,
        maximumAge: 60000
      }
    );
  } else {
    //console.log('geolocation IS NOT available');
    errorCallback('Your web browser does not allow geolocation.  Please use a browser with this feature.');
  }
};

util.navigateAfterSendingGoogleAnalytics = function(category, action, label, windowLocation) {
  analytics('send', {
      hitType: 'event',          // Required.
      eventCategory: category,   // Required.
      eventAction: action,      // Required.
      eventLabel: label,
      eventValue: 0,
      hitCallback: function() {
        console.log('set location: ' + windowLocation);
        window.location = windowLocation;
      }
    }
  );
}

util.sendAgencyFeedback = function(app, category, action, label, mailToOptions) {
  var mailTo = 'mailto:customer.service@vta.org&subject=Transit Service Feedback';

  mailTo += '&body=Transit Feedback Template Generated by OnTransit.  www.ontransitapp.com%0D%0A';

  for(k in mailToOptions) {
    mailTo += k + ': ' + mailToOptions[k] + '%0D%0A';
  }

  util.getLocation(function(position) {
    mailTo += 'GPS: ' + position.coords.latitude + ', ' + position.coords.longitude + '%0D%0A';
    mailTo += 'GPS Accuracy (meters): ' + position.coords.accuracy + '%0D%0A';
    
    app.geocoder.geocode({
        location: {
          lat: position.coords.latitude,
          lng: position.coords.longitude
        }
      }, 
      function(results, status) {
        if (status === google.maps.GeocoderStatus.OK) {
          if (results[1]) {
            mailTo += 'Approximate Address: ' + results[1].formatted_address + '%0D%0A';
            util.navigateAfterSendingGoogleAnalytics(category, action, label, mailTo);
          } else {
            mailTo += 'Approximate Address: Unavailable%0D%0A';
            util.navigateAfterSendingGoogleAnalytics(category, action, label, mailTo);
          }
        } else {
          mailTo += 'Approximate Address: Unavailable%0D%0A';
          util.navigateAfterSendingGoogleAnalytics(category, action, label, mailTo);
        }
      }
    );
  }, function(err) {
    mailTo += 'GPS and Approximate Address Unavailable%0D%0A';
    util.navigateAfterSendingGoogleAnalytics(category, action, label, mailTo);
  });
}

util.sendAppFeedback = function(category, action, label) {
  util.navigateAfterSendingGoogleAnalytics(category, action, label, 'https://ontransit.userecho.com/');
}

module.exports = util;